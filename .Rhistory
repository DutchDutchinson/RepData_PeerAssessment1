dave <- 100
dave
?knitr
library(knitr)
install.packages("knitr")
?knitr
library(knitr)
?knitr
#Hello
setwd("~/GitHub/RepData_PeerAssessment1")
data <- read.csv('./activity/activity.csv')
sum(is.na(data$steps))
install.packages("mice")
library(mice)
?mice
ts <- aggregate(data$steps, by = list(data$interval), FUN=mean, na.rm = TRUE)
ts
?ifelse
ts[1]
ts[2, 2]
?transform
?match
?transform
imputedData <- transform(data, steps = ifelse(is.na(data$steps), ts$x[match(data$interval, ts$Group.1)], data$steps))
sum(is.na(imputedData$steps))
##histogram
hist(imputedData$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(imputedData$steps)
median(imputedData$Steps)
median(imputedData$steps)
imputedData
ts$Group.1
ts$x
data$steps
imputedData
##histogram
hist(totalsteps$Steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(totalsteps$Steps, na.rm = TRUE)
median(totalsteps$Steps, na.rm = TRUE)
```
##histogram
hist(totalsteps$Steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(totalsteps$Steps, na.rm = TRUE)
median(totalsteps$Steps, na.rm = TRUE)
totalsteps <- aggregate(data$steps, by = list(data$date), FUN=sum)
colnames(totalsteps) <- c("Date", "steps")
##histogram
hist(totalsteps$Steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(totalsteps$Steps, na.rm = TRUE)
median(totalsteps$Steps, na.rm = TRUE)
totalsteps <- aggregate(data$steps, by = list(data$date), FUN=sum)
colnames(totalsteps) <- c("Date", "steps")
hist(totalsteps$Steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(totalsteps$Steps, na.rm = TRUE)
median(totalsteps$Steps, na.rm = TRUE)
hist(totalsteps$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(totalsteps$steps, na.rm = TRUE)
median(totalsteps$steps, na.rm = TRUE)
ts <- aggregate(data$steps, by = list(data$interval), FUN=mean, na.rm = TRUE)
plot(ts$Group.1, ts$x, type="l", main = "Average Daily Activity Pattern", xlab = "Interval", ylab = "Average Steps")
ts$Group.1[which.max(ts$x)]
sum(is.na(data$steps))
imputedData <- transform(data, steps = ifelse(is.na(data$steps), ts$x[match(data$interval, ts$Group.1)], data$steps))
hist(imputedData$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(imputedData$steps)
median(imputedData$steps)
imputedtotalsteps <- aggregate(imputedData$steps, by = list(imputedData$date), FUN=sum)
colnames(totalsteps) <- c("Date", "steps")
hist(imputedData$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(imputedData$steps)
median(imputedData$steps)
imputedData <- transform(data, steps = ifelse(is.na(data$steps), ts$x[match(data$interval, ts$Group.1)], data$steps))
##histogram
imputedtotalsteps <- aggregate(imputedData$steps, by = list(imputedData$date), FUN=sum)
colnames(totalsteps) <- c("Date", "steps")
hist(imputedData$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(imputedData$steps)
median(imputedData$steps)
hist(imputedtotalsteps$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(imputedtotalsteps$steps)
median(imputedtotalsteps$steps)
imputedtotalsteps
colnames(imputedtotalsteps) <- c("Date", "steps")
hist(imputedtotalsteps$x,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
##mean and median
mean(imputedtotalsteps$steps)
median(imputedtotalsteps$steps)
hist(imputedtotalsteps$steps,
xlab="Number of Steps",
ylab="Number of Days",
main="Histogram of Steps per Day")
sum(is.na(imputedData$steps))
weekdays
?weekdays
library(lattice)
?lattice
library(lattice)
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday")
imputedData$dow = as.factor(ifelse(is.element(weekdays(as.Date(imputedData$date)),weekdays), "Weekday", "Weekend"))
imputedstepsinterval <- aggregate(steps ~ interval + dow, imputedData, mean)
xyplot(imputedstepsinterval$steps ~ imputedstepsinterval$interval|imputedstepsinterval$dow, main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="l")
